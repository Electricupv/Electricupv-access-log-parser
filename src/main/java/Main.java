public class Main {

//Числа подряд. Дана следующая сигнатура метода:
//public static String listNums(int x);
//Необходимо реализовать метод таким образом, чтобы он возвращал строку, в которой будут записаны все числа от 0 до x (включительно). x может принимать значения от 0 и выше.

    public static String listNums(int x){
        String res = "";
        for (int i = 0; i <= x; i++) {
            res += i + " ";
        }
        return res;
    }

//Числа наоборот. Дана следующая сигнатура метода:
//public static String reverseListNums(int x);
//Необходимо реализовать метод таким образом, чтобы он возвращал строку, в которой будут записаны все числа от x до 0 (включительно). x может принимать значения от 0 и выше.

    public static String reverseListNums(int x){
        String res = "";
        for (int i = x; i >= 0; i--) {
            res += i + " ";
        }
        return res;
    }

//Четные числа. Дана следующая сигнатура метода:
//public static String chet(int x);
//Необходимо реализовать метод таким образом, чтобы он возвращал строку, в которой будут записаны все четные числа от 0 до x (включительно). Подсказа для обеспечения качества кода: инструкцию if использовать не следует.

    public static String chet(int x){
        String res = "";
        for (int i = 0; i <= x; i+=2) {
            res += i + " ";
        }
        return res;
    }

//Степень числа. Дана следующая сигнатура метода:
//public static int pow(int x, int y);
//Необходимо реализовать метод таким образом, чтобы он возвращал результат возведения x в степень y.
//Подсказка: для получения степени необходимо умножить единицу на число x, и сделать это y раз, т.е. два в третьей степени это 1*2*2*2

    public static int pow(int x, int y){
        int result = 1;
        for (int i = 0; i < y; i++) {
            result *= x;
        }
        return result;
    }

//Длина числа. Дана следующая сигнатура метода:
//public static int numLen(long x);
//Необходимо реализовать метод таким образом, чтобы он возвращал количество знаков в числе x. x может принимать значения от 0 и выше.

    public static int numLen(long x) {
        if (x == 0) {
            return 1;
        }
        int count = 0;
        while (x != 0) {
            count++;
            x /= 10;
        }
        return count;
    }

//Одинаковость. Дана следующая сигнатура метода:
//public static boolean equalNum(int x);
//Необходимо реализовать метод таким образом, чтобы он возвращал true, если все знаки числа одинаковы, и false в ином случае.

    public static boolean equalNum(int x) {
        // Извлекаем последнюю цифру числа, берем за эталон.
        int digit = x % 10;
        // Проверяем каждую цифру.
        while (x > 0) {
            if (x % 10 != digit) {
                return false;
            }
            x /= 10; // Удаляем последнюю цифру.
        }
        return true;
    }

//Квадрат. Дана следующая сигнатура метода:
//public static void square(int x);
//Необходимо реализовать метод таким образом, чтобы он выводил на экран квадрат из символов ‘*’ размером х, у которого х символов в ряд и х символов в высоту. Подсказка: метод System.out.print выводит без перехода на следующую строку, в то время как System.out.println выводит с переходом.

    public static void square(int x) {
        for (int i = 0; i < x; i++) {
            for (int j = 0; j < x; j++) {
                System.out.print("*");
            }
            System.out.println();
        }
    }

//Левый треугольник. Дана следующая сигнатура метода:
//public static void leftTriangle(int x);
//Необходимо реализовать метод таким образом, чтобы он выводил на экран треугольник из символов ‘*’ у которого х символов в высоту, а количество символов в ряду совпадает с номером строки.

    public static void leftTriangle(int x) {
        for (int i = 1; i <= x; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            System.out.println();
        }
    }

//Правый треугольник. Дана следующая сигнатура метода:
//public static void rightTriangle(int x);
//Необходимо реализовать метод таким образом, чтобы он выводил на экран треугольник из символов ‘*’ у которого х символов в высоту, а количество символов в ряду совпадает с номером строки, при этом треугольник выровнен по правому краю. Подсказка: перед символами ‘*’ следует выводить необходимое количество пробелов.

    public static void rightTriangle(int x) {
        for (int i = 1; i <= x; i++) {
            // Печатаем пробелы x - i
            for (int j = 1; j <= x - i; j++) {
                System.out.print(" ");
            }
            // Печатаем звёздочки i.
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            System.out.println();
        }
    }




}




